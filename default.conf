upstream api-proxy {
    server EXTERNAL_IP:8000;
}

server {
    listen 80;
    server_name api.DOMAIN;
    client_max_body_size 0;
    add_header  X-Time '$request_time';

    set $backend "http://api-proxy";
    location / {
        real_ip_header X-Forwarded-For;
        proxy_pass $backend;
    }
}

upstream web-account {
    server EXTERNAL_IP:4000;
}

server {
    listen 80;
    server_name account.DOMAIN;
    client_max_body_size 0;
    add_header  X-Time '$request_time';

    set $backend "http://web-account";
    location / {
        real_ip_header X-Forwarded-For;
        proxy_pass $backend;
    }
}


upstream web-dashboard {
    server EXTERNAL_IP:8080;
}

server {
    listen 80;
    server_name dashboard.DOMAIN;
    client_max_body_size 0;
    add_header  X-Time '$request_time';

    set $backend "http://web-dashboard";
    location / {
        real_ip_header X-Forwarded-For;
        proxy_pass $backend;
    }
}

server {
    listen 80;
    server_name DOMAIN;
    client_max_body_size 0;
    location ^~ /v2/ {
        proxy_pass                       http://daohub-registry-auth:6000;
        proxy_set_header  Host           $http_host;
        proxy_set_header  X-Real-IP      $remote_addr;
        proxy_read_timeout               9000;
        proxy_connect_timeout            9000;
        proxy_send_timeout               9000;
        send_timeout                     9000;
    }
    location / {
        rewrite ^/(.*) http://dashboard.DOMAIN/$1 permanent;
    }
}

server {
    listen 80;
    server_name auth.DOMAIN;
    client_max_body_size 0;
    location /token {
        proxy_pass                       http://daohub:5050/registry/token;
        proxy_set_header  Host           $http_host;
        proxy_set_header  X-Real-IP      $remote_addr;
    }
}

upstream webstream {
    server EXTERNAL_IP:3100;
}

server {
    listen       80;

    server_name  stream.DOMAIN;
    client_max_body_size 0;
    location / {
        proxy_pass   http://webstream;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
